hush

do 
  let plies = (slow 2 $ "<4 5 2 3>") :: Pattern (Ratio Integer)
      denom = (slow 1 $ "<3 3 3 4 3>") :: Pattern (Ratio Integer)
      period = 0.3
      muteDrums = id
      muteHats = id
      mult1 = "<2 2 1>"
      mult2 = "<2 2 1 2 1>"
      drumFunc = (# gain 0.75)
      hatFunc = (# pad11)
      revOften = 0.3
  d1 
      $ (|* gain 1.2)
      $ someCyclesBy period (within (0.8,0.99) (const 
        $ stack [ 
          pan "~ ~ ~ ~ 1" # ccn 7 # ccv 0 # midichan 15 # s "midi" 
          , pan "~ ~ ~ ~ 1" # pad4
          ] ))
      $ shift
      $ someCyclesBy revOften rev
      $ stack [
        plyWith (plies) id $ ccn 7 # ccv 100 # midichan 15 --harmor something
        , muteDrums $ plyWith (plies * mult1) drumFunc $ slow (plies/denom) $ fast denom $ pad3 --drums
        , muteHats $ plyWith (plies * mult2) hatFunc $ slow (plies/denom) $ fast denom $ pad12 --hats
        , randDelay
        , scene 0
      ] # cps (125/120/2) # rytm
  d2 $ fast 2 $ unfollowed


hush

do 
  let plies = (slow 2 $ "<4 5 2 3>") :: Pattern (Ratio Integer)
      denom = (slow 2 $ "<3 3 4 4 3 4>") :: Pattern (Ratio Integer)
      period = 0.8
      muteDrums = id
      muteHats = id
      mult1 = "<1 2 1>"
      mult2 = "<1 2 2 1 2>"
      drumFunc = (# gain 0.75)
      hatFunc = (# pad11)
      revOften = 0.3
  d1 
    $ cpsDisc 0.5 1.5
    $ stack [
        unfollowedDrums 
          plies denom mult1 mult2 period muteDrums muteHats drumFunc hatFunc revOften
        , slow 4 $ s "unfollowed" # n (slow 7 $ "<0 1 2 3 4 5 6 7 8 9>") # gain 0.9 # hpf 300 # lpf 7000
          # accelerate (range (-0.25) 0.25 $ shrand 379111)
    ]
  d2 $ fast 2 $ unfollowed


  -- dvco version
  d3 $ stack[
      ccn 92 # ccv (slow 2 $ "<0 0 0 1 1 1 2 2 2>") # s "midi"
      , slow 1.3 $ ccn 45 # ccv (discretise (1/4) $ shiftBy 8 $ choose [0,127]) # s "midi" # midichan 0
      , ccn "46*8" # ccv (range 0 127 $ slow 13 tri) # s "midi" # midichan 0
      , ccn "47*8" # ccv (range 1 127 $ slow 15 tri) # s "midi" # midichan 0
    ]
    
    hush



-- with other synths
    do 
      let plies = (slow 2 $ "<4 5 2 3 6 7>") :: Pattern (Ratio Integer)
          denom = (slow 2 $ "<3 3 4 4 3 4>") :: Pattern (Ratio Integer)
          period = 0.8
          muteDrums = id
          muteHats = g
          mult1 = "<1 2 1>"
          mult2 = "<1 2 2 1 2>"
          drumFunc = (# gain 0.8)
          hatFunc = (# pad11)
          revOften = 0.3
      d1 
        $ cpsDisc 0.5 1.5
        $ unfollowedDrums 
            plies denom mult1 mult2 period muteDrums muteHats drumFunc hatFunc revOften
      d2
        $ (|* gain 1.2) 
        $ shift
        $ someCyclesBy revOften rev
        $ stack [
          g $ plyWith (plies * mult1) (|* legato 0.85) $ slow (plies/denom) $ fast denom $ pad1 # legato 1
          , g $ plyWith (plies * mult1) (|* legato 0.85) $ slow (plies/denom) $ fast denom $ pad2 # legato 1
        ] # s "midi"
      d3 $ stack[
          ccn 92 # ccv "<0 0 0 1 1 1 2 2 2>" # s "midi"
          , g $ slow 3.3 $ ccn 45 # ccv (discretise (1/4) $ shiftBy 8 $ choose [0,127]) # s "midi" # midichan 0
          , g $ ccn "46*4" # ccv (range 0 127 $ slow 13 tri) # s "midi" # midichan 0
          , g $ ccn "47*4" # ccv (range 1 127 $ slow 15 tri) # s "midi" # midichan 0
        ]
        
        hush    