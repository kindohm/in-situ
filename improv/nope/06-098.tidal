do 
  let plies = (slow 2 $ "<3 5 7>") :: Pattern (Ratio Integer)
      denom = "<16 16 8>" :: Pattern (Ratio Integer)
  d1 
    $ (|* gain 1.2)
    $ cpsTri 0.5 1.25 3
    $ cpsDisc 0.25 1.5
    $ stack [
      slow (discretise 1 $ choose [1,1.5,2,3,4]) 
        $ (|+ note (shiftBy 899 $ choose [0,-12,-1,-13]))
        $ (|+ note "-24") $ midichan 0 # legato 1
      , (|+ note "-24") 
        $ sometimesBy 0.5 (stutWith (shiftBy 4 $ choose [2,2,3,4]) (0.0625) (|+ note (shiftBy 48 $ choose [1,-1]))) 
        $ pan (randcat ["1(<3 3 5>,8,<0 3 2 1>)"]) # midichan 1
      , sometimesBy 0.5 (within (0.875,1) (const $ pan "~ ~ ~ [~ ~ ~ 1]" # pad4))
        $ shift
        $ sometimesBy 0.5 (within (0.5,0.625) (const $ pan "~ 1" # pad4)) 
          $ plyWith plies (# gain 0.7) $ slow (plies/denom) $ pad3
      , rarely (# pad12) $ plyWith plies (# gain 0.7) $ slow (plies/denom) $ pad11
    ] # s "midi" # cps (160/120/2)

    hush

