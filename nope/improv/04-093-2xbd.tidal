

do 
  let pat = "<2 4 2 4 4 6 2 1 1>" :: Pattern Double
      times = "<10 15 20>"
      plyFunc = (# gain 0.7)
      period = 0.4
      superKick = "<0 0 1 1 1 1>"
      superHat = "<0 1 0 1 1>"
      muteKick = id
      muteHat = id
      synthFilter = (range 20 80 $ slow 30 sine)
      bendUp = (range 64 127 $ slow 25 sine)
      bendDown = (range 64 127 $ slow 35 sine)
      kickHold = (shiftBy 33 $ choose [0,127])
      revFreq = 0.3
  d1 
    $ cpsTri 0.5 1.25 3
    $ cpsDisc 0.75 1.25
    $ (# cps (pat * 0.5))
    $ (|* gain 1.2) 
    $ someCyclesBy revFreq rev
    $ shift
    $ someCyclesBy period (within (0.5,1) (const $ struct "~ 1" $ pad8))
    $ stack [ 
      (|+ note (discretise (1/2) $ shiftBy 489 $ choose [0,-12,-24])) 
        $ (# gain 0.8) $ plyWith ((times/) $ pat) plyFunc $ superimpose (# pad2) $ pad1 -- notes
      , muteKick $ plyWith ((times/) $ pat) plyFunc $ every superKick (superimpose (# pad4)) $ pad3 -- kicks
      , muteHat $ plyWith ((times/) $ pat) plyFunc $ every superHat (superimpose (# pad12)) $ pad11 -- hats
      , pad7
      , fast 4 $ ccn 40 # ccv synthFilter
      , fast 4 $ ccn 35 # ccv bendUp
      , fast 4 $ ccn 36 # ccv bendDown
      , fast 4 $ ccn 37 # ccv kickHold
      , normDelay
      , scene (randcat [0,1,2])
      ] 
      # rytm


  d2
    $ stack [
      ccn 92 # ccv "< 2>" # s "midi" # midichan 0
      , slow 3.3 $ ccn 45 # ccv (discretise (1/8) $ shiftBy 8 $ choose [0,127]) # s "midi" # midichan 0
      , slow 4.18 $ ccn 46 # ccv (range 0 127 $ shrand 7237) # s "midi" # midichan 0
      , slow 2.58 $ ccn 47 # ccv (range 1 110 $ shrand 7337) # s "midi" # midichan 0
    ]

d2 silence


      hush