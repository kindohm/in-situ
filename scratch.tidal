-- 097 --
do 
  let plies = "<5 10 15>"
      pat = "<1 1.5 1 2 0.75 1>"
      synth1Lfo = 0
      synth2Lfo = 0
  d1
    $ cpsDisc 0.5 1.5
    $ (|* gain 1.2)
    $ stack [
      -- synths
      g $ slow 8 $ fast (shiftBy 3 $ choose [1,1.1..2]) $ (# note "-24") $ pad1
      , g $ slow 7.23234 $ fast (shiftBy 3 $ choose [1,1.1..2]) $ (# note "-24") $ pad2
      , ccn 35 # ccv synth1Lfo
      , ccn 36 # ccv synth2Lfo
      -- drums
      , g $ plyWith ((plies/) $ pat) (# gain 0.8) $ randcat [pad3, pad4, pad7, pad8] 
      -- hats
      , g $ plyWith ((plies/) $ pat) ((# pad11) . (# gain 0.8)) $ pad12
      , scene "<0>"
      , normDelay
    ] # s "midi" # cps pat
  d2 -- trans
    $ (|* gain 1.1)
    $ stack [
      slow 4 $ pad6 
    ]

    hush


-- 087 --
do 
  let 
    pat = "<4 2 3 1 2 1 1 0.5>"
    period = 0
    amb1Mute = g
    amb2Mute = id
    transitionMute = g
    drumsMute = g
    snareMute = g
    times = "<5 10 15>"
    kickPlyFunc = (# gain 0.8)
    hatPlyFunc = (# pad11)
    bassLfoDepth = (range 0 127 $ slow 10 tri)
    bassLfoRate = 0
    amb2LfoRate = (range 0 127 $ slow 11 tri)
    amb2LfoDepth = (range 0 127 $ slow 10 tri)
  d1 
    $ cpsDisc 0.5 1.5
    $ (|* gain 1.1)
    $ (# cps pat )
    $ someCyclesBy period (within (0.5,1) (const $ struct "~ 1" $ pad4))
    $ stack [
        amb1Mute $ slow 4 $ pad6 
        , amb2Mute $ slow 4.1 $ pad5
        , transitionMute $ pad1
        , drumsMute $ plyWith ((times/) $ pat) kickPlyFunc $ pad3
        , drumsMute $ plyWith ((times/) $ pat) hatPlyFunc $ pad12
        , snareMute $ (4 ~>) $ slow 4 $ pad2
        , amb2Mute $ ccn 40 # ccv amb2LfoRate
        , amb2Mute $ ccn 41 # ccv amb2LfoDepth
        , randcat [ normDelay ]
        , slow 2 $ scene (randcat [0])
    ]
    # rytm

    hush

    -- unfollowed --    
d2 $ fast 2 $ unfollowed 

d2 silence

-- 093 --
do 
  let pat = "<2 3 2 3 2 1 4 1 1 1>"
      times = "<10 20 15>"
      plyFunc = (# gain 0.8)
      period = 0
      superKick = "<0 1 1 1 1 0>"
      superHat =  "<0 1 1 1 1 0>"
      muteKick = g
      muteHat = g
      muteSynth = g
      synthFilter = (range 20 50 $ slow 30 sine)
      bendUp = (range 0 127 $ slow 10 tri)
      bendDown = (range 0 0 $ slow 11 tri)
      kickHold = (segment 1 $ shiftBy 83 $ choose [0,127])
      revFreq = 0.3
  d1  
    $ cpsDisc 0.75 2
    $ (# cps (pat * 0.5))
    $ (|* gain 1.2) 
    $ someCyclesBy revFreq rev $ shift
    $ someCyclesBy period (within (0.5,1) (const $ struct "~ 1" $ pad8)) $ shift
    $ stack [ 
      muteSynth $ (|+ note (discretise (1/2) $ shiftBy 489 $ choose [0])) 
        $ (# gain 0.8) $ plyWith ((times/) $ pat) plyFunc $ superimpose (# pad2) $ pad1 -- notes
      , muteKick $ plyWith ((times/) $ pat) plyFunc $ every superKick (superimpose (# pad4)) $ pad3 -- kicks
      , muteHat $ plyWith ((times/) $ pat) plyFunc $ every superHat (superimpose (# pad12)) $ pad11 -- hats
      , pad7
      , fast 4 $ ccn 40 # ccv synthFilter
      , fast 4 $ ccn 35 # ccv bendUp
      , fast 4 $ ccn 36 # ccv bendDown
      , fast 4 $ ccn 37 # ccv kickHold
      , randcat [normDelay]
      , scene (randcat [0])
      , g $ slow 2 $ pad6 -- out
      , slow 1.47 $ pad9 -- out
      , slow 1.52 $ pad5 --out
      ] # rytm

hush

-- trans on 093
do
  d2 $g $ cantsynth # cps (160/120/2)
  d1 
    $ stack [
      slow 1.47 $ pad9
      , slow 1.52 $ pad5 ] # rytm # cps (160/120/2) # gain 1.2

d1 silence 

-- 096 cant --

do
  let 
    plies = (slow 2 $ "<3 3 5>") :: Pattern (Ratio Integer)
    denom = ((discretise (1/8) $ slow 389 $ choose [4])) :: Pattern (Ratio Integer)
    period = 0
    kickMute = id
    kickPlyFunc= (|* gain 0.9)
    hatPlyFunc = (# pad11)
    hatMute = g
    rollMute = g
    percMute = g
  d1
    $ (|* gain 1.2)
    $ someCyclesBy period (within (0.625,1) (const $ s "~ [~ midi ~ ~]" # note "-24" # midichan 3))
    $ stack [
      kickMute $ plyWith plies kickPlyFunc 
        $ slow (plies/denom) $ fast 2 $ midichan 2 # note "-36"
      ,  hatMute $ plyWith plies hatPlyFunc
        $ slow (plies/denom) $ fast 2 $ pad12
      , rollMute $ rollSlow 1 $ pad5
      , percMute $ (# gain (range 0.7 1.1 $ shrand 74)) 
        $ (# midichan (shiftBy 89 $ choose [6,7])) 
        $ plyWith plies id $ slow (plies/denom) $ fast 2 $ pan 1
        # note "-24" 
      , normDelay
      , scene 0
    ] # s "midi" # cps (160/120/2)
  d2 $ cantsynth

  d2 silence

hush 

-- 099 --
do 
  let plies = "<5 10 15 20>"
      denom = "<8 4 4 8 6 6 8 3>"
      pat = "<2 1 3 1.5 1 0.5 0.5>"
      period = 0.4
  d1 
    $ cpsTri 0.5 1.5 3
    $ cpsDisc 0.5 1.5
    $ (|* gain 1.2)
    $ someCyclesBy period (within (0.75,1) (const $ pan "~ ~ ~ 1" # pad4 # s "midi"))
    $ shiftBy 33
    $ someCyclesBy 0.3 rev
    $ stack [
      -- kick
        plyWith plies (|* gain 0.95) $ slow (plies/denom) $ pad3           
      -- hat
      , plyWith plies ((# gain 0.8) . (# pad11)) $ slow (plies/denom) $ pad12
      -- pad
      , (|+ note (shiftBy 489 $ choose [0,12,2,-10])) $ pad6
      -- synth 2
      , g $ (|+ note (shiftBy 489 $ choose [0,-12,2,-10])) $ plyWith 2 id $ pad2
      -- perc
      , degradeBy 0 $ shiftBy 44 $ pan "1*8" # pad7 # gain (range 0.7 1 $ shrand 71)
      -- anchor
      , slow 3 $ pad8
      , randcat [normDelay, randDelay]
      , scene (randcat [0,1,2])
    ] # s "midi" # cps pat


-- rising 90
do 
  let plies = (slow 1 $ "<3 4 5>") :: Pattern (Ratio Integer)
      denom = 4
      period = 0
      hatPlyFunc = (# pad11)
      kickPlyFunc = (# gain 0.75)
      synthUp = 0
      synthDown = 0
      synthMute = id
      hatMute = g
      drumsMute = g
      kickFill = g
  d1 
    $ (|* gain 1.2)
    $ someCyclesBy period (within (0.625, 1) (const 
      $ stack [ 
        pan "~ ~ ~ ~ ~ [1 ~] ~ ~" # pad4
        , kickFill $ pan "~ ~ ~ ~ ~ [~ 1?] 1*2? 1*2?" # pad3 ]))
    $ stack [
    synthMute $ iter 8 $ struct "1(3,8)" $ pad1 --synth1
    , synthMute $ ((3/16) ~>) $ iter 8 $ struct "1(3,8)" $ pad2 -- synth2
    , hatMute $ plyWith plies (hatPlyFunc) $ slow (plies/denom) $ fast 4 $ pad12 -- hat
    , drumsMute $ plyWith plies (kickPlyFunc) $ slow (plies/denom) $ fast 4 $ pad3 -- kick
    , synthMute $ ccn 35 # ccv synthUp
    , synthMute $ ccn 36 # ccv synthUp
    , synthMute $ ccn 40 # ccv synthDown
    , synthMute $ ccn 41 # ccv synthDown
    , scene (slow 3 $ "<0>")
    ] # s "midi" # cps (160/120/2)     
    

    hush